package views

import "beep/models"
import "fmt"

templ Upload(genres []models.Genre, keys []models.Key, instruments []models.Instrument, variations []models.InstrumentVariation, userID string) {
	@Page(false) {
		<div class="w-screen min-h-screen mx-auto bg-white p-6 rounded shadow-md mt-20">
			<form
				id="uploadForm"
				enctype="multipart/form-data"
				hx-post={ fmt.Sprintf("/upload?id=%s", userID) }
				hx-target="#response-div"
				hx-target-error="#response-div"
				hx-swap="outerHTML"
				hx-push-url="true"
				hx-headers='js:{"token": getToken()}'
			>
				<div id="images-container"></div>
				<div class="flex w-full justify-center">
					<div
						id="multi-upload-button"
						class="inline-flex items-center px-4 py-2 bg-gray-600 border border-gray-600 rounded-l font-semibold cursor-pointer text-sm text-white tracking-widest hover:bg-gray-500 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition "
					>
						ВЫБЕРИ КАРТИНКУ
					</div>
					<div class="w-4/12 lg:w-3/12 border border-gray-300 rounded-r-md flex items-center justify-between">
						<span id="multi-upload-text" class="p-2"></span>
						<button id="multi-upload-delete" type="button" class="hidden" onclick="removeMultiUpload()">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="fill-current text-red-700 w-3 h-3"
								viewBox="0 0 320 512"
							>
								<path
									d="M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"
								></path>
							</svg>
						</button>
					</div>
				</div>
				<input type="file" id="image" name="image" class="hidden" multiple/>
				////////////////////////////////////////////////////////////////////////
				<div class="my-5">
					<div class="flex w-full justify-center">
						<div
							id="multi-audio-button"
							class="inline-flex items-center px-4 py-2 bg-gray-600 border border-gray-600 rounded-l font-semibold cursor-pointer text-sm text-white tracking-widest hover:bg-gray-500 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition "
						>
							ВЫБЕРИ ЗВУЧОК
						</div>
						<div class="w-4/12 lg:w-3/12 border border-gray-300 rounded-r-md flex items-center justify-between">
							<span id="multi-audio-text" class="p-2"></span>
							<button id="multi-audio-delete" type="button" class="hidden" onclick="removeAudioUpload()">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									class="fill-current text-red-700 w-3 h-3"
									viewBox="0 0 320 512"
								>
									<path
										d="M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"
									></path>
								</svg>
							</button>
						</div>
					</div>
					<input type="file" id="audio" name="audio" accept="audio/*" class="hidden"/>
				</div>
				<div class="flex items-center">
					<div class="controls w-14 h-14  flex justify-center items-center rounded-full">
						<i class="fa fa-play text-terakot text-3xl hidden" id="playPause"></i>
					</div>
					<div id="waveform" class="flex-initial w-full ml-2"></div>
				</div>
				//<button id="playPause" type="button" class="mt-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600  hidden">Play/Pause</button>
				<div class="flex">
					<div class="mb-4">
						<label for="bpm" class="block font-medium">BPM:</label>
						<div class="w-72">
							<div class="relative h-10 w-full min-w-[200px]">
								<input
									type="number"
									id="bpm"
									name="bpm"
									min="1"
									class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-pink-500 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
									placeholder=" "
								/>
								<label class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none text-[11px] font-normal leading-tight text-blue-gray-400 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-pink-500 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:border-pink-500 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:border-pink-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500">
									Required
								</label>
							</div>
						</div>
						//<input type="number" id="bpm" name="bpm" min="1" class="mt-1"/>
					</div>
					<div class="mb-4">
						<label for="price" class="block font-medium">Price:</label>
						//<input type="number" id="price" name="price" min="0" step="0.01" class="mt-1"/>
						<div class="w-72">
							<div class="relative h-10 w-full min-w-[200px]">
								<input
									type="number"
									id="price"
									name="price"
									min="0"
									class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-pink-500 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
									placeholder=" "
								/>
								<label class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none text-[11px] font-normal leading-tight text-blue-gray-400 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-pink-500 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:border-pink-500 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:border-pink-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500">
									ЦЕНА
								</label>
							</div>
						</div>
					</div>
				</div>
                <div class="flex " >
                    <div class="mb-4">
					<label for="genre" class="block font-medium">Genre:</label>
					<div>
						<div class="relative inline-flex self-center">
							<svg class="text-white bg-purple-700 absolute top-0 right-0 m-2 pointer-events-none p-2 rounded" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="40px" height="40px" viewBox="0 0 38 22" version="1.1">
								<title>F09B337F-81F6-41AC-8924-EC55BA135736</title>
								<g id="ZahnhelferDE—Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
									<g id="ZahnhelferDE–Icon&Asset-Download" transform="translate(-539.000000, -199.000000)" fill="#ffffff" fill-rule="nonzero">
										<g id="Icon-/-ArrowRight-Copy-2" transform="translate(538.000000, 183.521208)">
											<polygon id="Path-Copy" transform="translate(20.000000, 18.384776) rotate(135.000000) translate(-20.000000, -18.384776) " points="33 5.38477631 33 31.3847763 29 31.3847763 28.999 9.38379168 7 9.38477631 7 5.38477631"></polygon>
										</g>
									</g>
								</g>
							</svg>
							<select id="genre" name="genre[]" class="text-2xl font-bold rounded border-2 border-purple-700 text-gray-600 h-14 w-60 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none">
								for _, genre := range genres {
									<option value={ genre.Name }>{ genre.Name }</option>
								}
							</select>
						</div>
					</div>
				</div>
				<div class="mb-4">
					<label for="key" class="block font-medium">Key:</label>
					<div>
						<div class="relative inline-flex self-center">
							<svg class="text-white bg-purple-700 absolute top-0 right-0 m-2 pointer-events-none p-2 rounded" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="40px" height="40px" viewBox="0 0 38 22" version="1.1">
								<title>F09B337F-81F6-41AC-8924-EC55BA135736</title>
								<g id="ZahnhelferDE—Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
									<g id="ZahnhelferDE–Icon&Asset-Download" transform="translate(-539.000000, -199.000000)" fill="#ffffff" fill-rule="nonzero">
										<g id="Icon-/-ArrowRight-Copy-2" transform="translate(538.000000, 183.521208)">
											<polygon id="Path-Copy" transform="translate(20.000000, 18.384776) rotate(135.000000) translate(-20.000000, -18.384776) " points="33 5.38477631 33 31.3847763 29 31.3847763 28.999 9.38379168 7 9.38477631 7 5.38477631"></polygon>
										</g>
									</g>
								</g>
							</svg>
							<select id="key" name="key" class="text-2xl font-bold rounded border-2 border-purple-700 text-gray-600 h-14 w-60 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none">
								for _, key := range keys {
									<option value={ key.Name }>{ key.Name }</option>
								}
							</select>
						</div>
					</div>
				</div>
				<div class="mb-4">
					<label for="instrument" class="block font-medium">Instrument:</label>
					<div>
						<div class="relative inline-flex self-center">
							<svg class="text-white bg-purple-700 absolute top-0 right-0 m-2 pointer-events-none p-2 rounded" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="40px" height="40px" viewBox="0 0 38 22" version="1.1">
								<title>F09B337F-81F6-41AC-8924-EC55BA135736</title>
								<g id="ZahnhelferDE—Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
									<g id="ZahnhelferDE–Icon&Asset-Download" transform="translate(-539.000000, -199.000000)" fill="#ffffff" fill-rule="nonzero">
										<g id="Icon-/-ArrowRight-Copy-2" transform="translate(538.000000, 183.521208)">
											<polygon id="Path-Copy" transform="translate(20.000000, 18.384776) rotate(135.000000) translate(-20.000000, -18.384776) " points="33 5.38477631 33 31.3847763 29 31.3847763 28.999 9.38379168 7 9.38477631 7 5.38477631"></polygon>
										</g>
									</g>
								</g>
							</svg>
							<select id="instrument" name="instrument[]" class="text-2xl font-bold rounded border-2 border-purple-700 text-gray-600 h-14 w-60 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none">
								for _, instrument := range instruments {
									<option value={ instrument.Name }>{ instrument.Name }</option>
								}
							</select>
						</div>
					</div>
				</div>
				<div class="mb-4">
					<label for="variation" class="block font-medium">Variation</label>
					<div>
						<div class="relative inline-flex self-center">
							<svg class="text-white bg-purple-700 absolute top-0 right-0 m-2 pointer-events-none p-2 rounded" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="40px" height="40px" viewBox="0 0 38 22" version="1.1">
								<title>F09B337F-81F6-41AC-8924-EC55BA135736</title>
								<g id="ZahnhelferDE—Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
									<g id="ZahnhelferDE–Icon&Asset-Download" transform="translate(-539.000000, -199.000000)" fill="#ffffff" fill-rule="nonzero">
										<g id="Icon-/-ArrowRight-Copy-2" transform="translate(538.000000, 183.521208)">
											<polygon id="Path-Copy" transform="translate(20.000000, 18.384776) rotate(135.000000) translate(-20.000000, -18.384776) " points="33 5.38477631 33 31.3847763 29 31.3847763 28.999 9.38379168 7 9.38477631 7 5.38477631"></polygon>
										</g>
									</g>
								</g>
							</svg>
							<select id="variation" name="variation[]" class="text-2xl font-bold rounded border-2 border-purple-700 text-gray-600 h-14 w-60 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none">
								for _, variation := range variations {
									<option value={ variation.Name }>{ variation.Name }</option>
								}
							</select>
						</div>
					</div>
				</div>
                </div>
				
				<button id="addBtn" type="submit" class="bg-rozov text-white px-4 py-2 rounded hover:bg-temnosin">>Добавить</button>
			</form>
			<div id="response-div">
				<div
					hx-get="/users/profile"
					hx-trigger="click delay:1s from:#addBtn"
					hx-target="#body"
					hx-swap="outerHTML"
					hx-push-url="true"
					hx-headers='js:{"token": getToken()}'
				></div>
			</div>
			<div id="any-errors"></div>
		</div>
		<script>
    //all ids and some classes are importent for this script
    var playPauseButton = document.getElementById("playPause");
    var audioInput = document.getElementById("audio");
    multiAudioButton = document.getElementById("multi-audio-button");
    multiAudioDisplayText = document.getElementById("multi-audio-text");
    multiAudioDeleteButton = document.getElementById("multi-audio-delete");
    var wavesurfer;

    multiAudioButton.onclick = function() {
         audioInput.click();
    };

    audioInput.addEventListener('change', function(event) {
    var file = audioInput.files[0];
    console.log(file)
    multiAudioDisplayText.innerHTML = file;
    multiAudioDeleteButton.classList.add("z-100", "p-2", "my-auto");
    multiAudioDeleteButton.classList.remove("hidden");
    playPauseButton.classList.remove("hidden")
    if (file) {
        var reader = new FileReader();
        reader.onload = function(e) {
            var audioData = e.target.result;

            if (wavesurfer) {
                wavesurfer.destroy();
            }

            wavesurfer = WaveSurfer.create({
                container: '#waveform',
                waveColor: '#D1D0E8',
                progressColor: '#655EB8',
                height: 32,
                responsive: true,
                hideScrollbar: true,
                barWidth: 3,
                barGap: 1.5
            });

            wavesurfer.load(audioData);
        };
        reader.readAsDataURL(file);
    }
});

    playPauseButton.addEventListener("click", function() {
        if (wavesurfer) {
                wavesurfer.playPause();
            }
        });

     function removeAudioUpload() {
        wavesurfer.destroy();
        audioInput.value = '';
        multiAudioDisplayText.innerHTML = '';
        multiAudioDeleteButton.classList.add("hidden");
        playPause.classList.add("hidden");
        multiAudioDeleteButton.classList.remove("z-100", "p-2", "my-auto");
    }
    multiUploadButton = document.getElementById("multi-upload-button");
    multiUploadInput = document.getElementById("image");
    imagesContainer = document.getElementById("images-container");
    multiUploadDisplayText = document.getElementById("multi-upload-text");
    multiUploadDeleteButton = document.getElementById("multi-upload-delete");

    multiUploadButton.onclick = function () {
        multiUploadInput.click(); // this will trigger the click event
    };

    multiUploadInput.addEventListener('change', function (event) {

        if (multiUploadInput.files) {
            let files = multiUploadInput.files;

            // show the text for the upload button text filed
            multiUploadDisplayText.innerHTML = files.length + ' files selected';

            // removes styles from the images wrapper container in case the user readd new images
            imagesContainer.innerHTML = '';
            imagesContainer.classList.remove("w-full", "grid", "grid-cols-1","sm:grid-cols-2","md:grid-cols-3","lg:grid-cols-4", "gap-4");

            // add styles to the images wrapper container
            imagesContainer.classList.add("w-full", "grid", "grid-cols-1","sm:grid-cols-2","md:grid-cols-3","lg:grid-cols-4", "gap-4");

            // the delete button to delete all files
            multiUploadDeleteButton.classList.add("z-100", "p-2", "my-auto");
            multiUploadDeleteButton.classList.remove("hidden");

            Object.keys(files).forEach(function (key) {

                let file = files[key];

                // the FileReader object is needed to display the image
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function () {
                    let imageDiv = document.createElement('div');
                    imageDiv.classList.add("h-64", "mb-3", "w-full", "p-3", "rounded-lg", "bg-cover", "bg-center");
                    imageDiv.style.backgroundImage = 'url(' + reader.result + ')';
                    imagesContainer.appendChild(imageDiv);
                }
            })
        }
    })

    function removeMultiUpload() {
        imagesContainer.innerHTML = '';
        imagesContainer.classList.remove("w-full", "grid", "grid-cols-1","sm:grid-cols-2","md:grid-cols-3","lg:grid-cols-4", "gap-4");
        multiUploadInput.value = '';
        multiUploadDisplayText.innerHTML = '';
        multiUploadDeleteButton.classList.add("hidden");
        multiUploadDeleteButton.classList.remove("z-100", "p-2", "my-auto");
    }
   
</script>
	}
}
